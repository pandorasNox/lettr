
{{ define "lettr-form" }}
  <div class="text-center" id="lettr-container" hx-ext="response-targets">  
    <h2 class="text-center">{{ if .IsSolved }}SOLVED{{ else if .IsLoose }}YOU LOOSE{{ else }}unsolved{{ end }}</h2>
    <div class="inline-block m-auto">
        <div>
            <div id="any-errors" class="min-h-6 text-red-600 dark:text-red-400"></div>
            <div class="mb-1 flex items-center justify-between">
              <div class="group">
                <button >show solution</button>
                <span class="w-5 text-pink-500 invisible opacity-0 group-hover:opacity-100 group-hover:visible">{{ .Data.Debug }}</span>
              </div>
              <button class="text-xs text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg px-3.5 py-1.5 dark:bg-gray-800 dark:text-white dark:border-gray-700 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700"
                hx-post="/new"
                hx-target="#lettr-container"
              >
                New Game
              </button>
            </div>
        </div>
        <form
            name="lettr"
            
            onsubmit="event.preventDefault();"

            hx-post="/lettr"
            hx-target="#lettr-container"
            hx-disabled-elt="this"
            hx-target-error="#any-errors"

            {{ if .IsSolved }}inert{{ end }}
        >
            <div class="grid grid-cols-5 gap-1">
              {{ if .Data }}
                {{ $canWrite := false }}
                {{ $hasWrite := .IsSolved }}
                {{ range $ri, $rowGuess := .Data.Guesses }}
                  {{ range $li, $letterGuess := $rowGuess }}
                    {{ $hasValue := and (ne $letterGuess.Letter 0) (ne $letterGuess.Letter 65533) }}
                    {{ if and (not $hasValue) (not $hasWrite) }}
                      {{ $canWrite = true }}
                      {{ $hasWrite = true }}
                    {{ end }}
                    <div>
                      <input
                        {{ if and $canWrite (eq $li 0) }}autofocus{{ end }}
                        type="text"
                        maxlength="1"
                        {{ if $canWrite }}required="required"{{ else if not $hasWrite }}readonly="readonly"{{ else }}disabled="disabled"{{ end }}
                        pattern="[A-Za-z]"
                        name="r{{ $ri }}"
                        class="
                          {{ if $canWrite }}focusable{{ end }}

                          {{ if and (not (IsMatchExact $letterGuess.Match)) (not (IsMatchVague $letterGuess.Match)) }}
                          bg-gray-100
                          dark:bg-gray-700
                          {{ else if (IsMatchExact $letterGuess.Match) }}
                          bg-green-400
                          dark:bg-green-700
                          {{ else if and (not (IsMatchExact $letterGuess.Match)) (IsMatchVague $letterGuess.Match) }}
                          bg-yellow-200
                          dark:bg-yellow-700
                          {{ end }}

                          caret-transparent
                          capitalize

                          rounded
                          border-gray-400
                          dark:border-gray-600

                          w-16
                          h-16

                          text-center
                          text-4xl
                          text-gray-600

                          dark:placeholder-gray-400
                          dark:text-white
                          dark:focus:ring-blue-500
                          dark:focus:border-blue-50
                        "
                        value="{{ if $hasValue }}{{ printf "%c" $letterGuess.Letter }}{{ end }}"
                        autocomplete="off"
                      />
                      <!-- "bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" -->
                    </div>
                  {{ end }}
                  {{ if $hasWrite }}{{ $canWrite = false }}{{ end }}
                {{ end }}
              {{ end }}
            </div>

            <input type="submit" hidden />
        </form>
    </div>
    {{ template "keyboard" . }}
  </div>
{{ end }}


{{ define "lang-btn-inner" }}
  {{- if eq .Language "de" }}
    <svg class="h-3.5 w-3.5 rounded-full me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-de" viewBox="0 0 512 512"><path fill="#ffce00" d="M0 341.3h512V512H0z"/><path d="M0 0h512v170.7H0z"/><path fill="#d00" d="M0 170.7h512v170.6H0z"/></svg>
    <span>Deutsch</span>
  {{- else -}}
    <svg class="w-5 h-5 rounded-full me-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 3900 3900"><path fill="#b22234" d="M0 0h7410v3900H0z"/><path d="M0 450h7410m0 600H0m0 600h7410m0 600H0m0 600h7410m0 600H0" stroke="#fff" stroke-width="300"/><path fill="#3c3b6e" d="M0 0h2964v2100H0z"/><g fill="#fff"><g id="d"><g id="c"><g id="e"><g id="b"><path id="a" d="M247 90l70.534 217.082-184.66-134.164h228.253L176.466 307.082z"/><use xlink:href="#a" y="420"/><use xlink:href="#a" y="840"/><use xlink:href="#a" y="1260"/></g><use xlink:href="#a" y="1680"/></g><use xlink:href="#b" x="247" y="210"/></g><use xlink:href="#c" x="494"/></g><use xlink:href="#d" x="988"/><use xlink:href="#c" x="1976"/><use xlink:href="#e" x="2470"/></g></svg>
    <span>English (US)</span>
  {{ end }}
{{ end }}

{{ define "oob-lang-switch" }}
<div hx-swap-oob="innerHTML" id="language-dropdown-menu">
    {{- template "lang-btn-inner" . -}}
</div>
{{ end }}

{{ define "keyboard" }}
<div id="keyboard" class="mt-2">
{{/* printf "%v" .Keyboard */}}
    {{ range $keyRow := .Keyboard.KeyGrid }}
    <div class="mb-1">
        {{ range $keyboardKey := $keyRow }}
            <button
                onclick="document.dispatchEvent(new KeyboardEvent('keyup',{'key':'{{ $keyboardKey.Key }}'}))"
                class="
                    text-xs text-gray-900
                    border border-gray-300
                    focus:outline-none hover:bg-gray-200 focus:ring-4 focus:ring-gray-100
                    font-medium
                    rounded-lg
                    px-3.5 py-1.5
                    dark:text-white dark:border-gray-700 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700

                    {{ if not $keyboardKey.IsUsed }}
                    bg-white
                    dark:bg-gray-800
                    {{ else if and $keyboardKey.IsUsed (IsMatchNone $keyboardKey.Match) }}
                    bg-gray-100
                    dark:bg-gray-600
                    {{ else if and $keyboardKey.IsUsed (IsMatchExact $keyboardKey.Match) }}
                    bg-green-400
                    dark:bg-green-700
                    {{ else if and $keyboardKey.IsUsed (IsMatchVague $keyboardKey.Match) }}
                    bg-yellow-200
                    dark:bg-yellow-700
                    {{ end }}
                "
            >
               {{ $keyboardKey.Key }}
            </button>
        {{ end }}
    </div>
    {{ end }}
</div>
{{ end }}
