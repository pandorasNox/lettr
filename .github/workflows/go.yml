# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Build, Test, Lint

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.4
      with:
        #node-version: 20.12.1
        # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
        node-version-file: ./web/package.json
        # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
        #architecture: # optional
        # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
        cache: npm
        # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
        cache-dependency-path: ./web/package-lock.json

    - name: Build Typescript and Tailwind
      run: |
        (
          cd web;
          npm install;
          ./../scripts/tailwind_build.sh;
          npx tsc --project app/tsconfig.json;
        )

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.6'

    - name: Build
      run: go build -v ./...

    # - name: Test
    #   run: go test -v ./...
    - name: run test (via container build test target)
      uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6
      with:
        context: .
        file: container-images/app/Dockerfile
        target: tester
        provenance: false # provenance = Generate provenance attestation for the build (shorthand for --attest=type=provenance)
        platforms: linux/amd64
        push: false

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6.1.1
      with:
        version: v1.61.0

    - name: build the container image
      uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6
      with:
        context: .
        file: container-images/app/Dockerfile
        target: prod
        provenance: false # provenance = Generate provenance attestation for the build (shorthand for --attest=type=provenance)
        platforms: linux/amd64
        push: false
